<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- users_mapper.xml -->
<mapper namespace="MemberDAO">
	<select id="getMemberList" resultType="member" parameterType="member">
		SELECT u.user_id, u.password, u.nickname, u.e_mail "eMail", u.user_date, u.user_type, u.phonenumber, u.pay_item, u.pay_service, v.volumn 
		FROM users u
		LEFT OUTER JOIN (select user_id, sum(volumn) as volumn from user_tbspc_tb group by user_id) v
		ON u.user_id = v.user_id
		<where>
			<if test="userId != null and userId != '' ">
				u.user_id like '%' || #{userId} || '%'
			</if>
			<if test="nickname != null and nickname != '' ">
				and u.nickname like '%' || #{nickname} || '%'
			</if>
		</where>
	</select>
	<select id="getMember" parameterType="member" resultType="member">
		select user_id,
		password, nickname, e_mail, user_date, user_type, phonenumber, pay_item ,pay_service
		from users
		where user_id=#{userId}
	</select>
	<select id="getMemberListMap" parameterType="member" resultType="map">
		select user_id "user_id", password "password", nickname "nickname", e_mail "e_mail", user_date "user_date", user_type "user_type", phonenumber "phonenumber"
		from users
	</select>
	<!-- 아이디 중복조회 -->
	<select id="getUserId" parameterType="member" resultType="member">
		select user_id 
		from users 
		where user_id = #{userId}
	</select>

	<!-- 등록 -->
	<insert id="insertMember" parameterType="member">
		insert into users (user_id, password, nickname, e_mail, user_date, phonenumber)
		values ( #{userId},
		#{password},
		#{nickname},
		#{eMail},
		sysdate,
		#{phonenumber} )
	</insert>

	<!-- 수정 -->
	<update id="updateMember" parameterType="member">
		update users set
		password = #{password},
		nickname = #{nickname},
		e_mail = #{eMail},
		phonenumber = #{phonenumber}
		where user_id = #{userId}
	</update>

	<!-- 삭제 -->
	<delete id="deleteMember" parameterType="member">
		delete from users
		where user_id = #{userId}
	</delete>
	
	<!-- 윤정 회원탈퇴신청 -->
	<update id = "withdrawal" parameterType="member">
		UPDATE USERS SET user_type = ${userType}
						, pay_item = null
						, pay_service = #{payService}
						, del_date = sysdate + 30
		WHERE user_id = #{userId}
	</update>
	
	<!-- 윤정 탈퇴신청하고 한달 지난 회원 삭제 처리 -->
	<delete id = "deleteWithdrawalUsers">
	DELETE FROM users
	<![CDATA[
  		WHERE del_date <= sysdate
  	]]>
	</delete>
</mapper>
